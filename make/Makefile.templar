#########################
# must be done at start #
#########################
# this makefile's name. if you do this after including other stuff you will get
# the names of the stuff you include later on.
TEMPLAR_MAKEFILE:=$(lastword $(MAKEFILE_LIST))

##############
# parameters #
##############
# the template file to be created
TEMPLAR_TMPL_FILE:=.tdefs.config
# what is the templar script?
TEMPLAR_TEMPLAR_SCRIPT?=/usr/bin/templar
# what is the make helper script?
TEMPLAR_MAKEHELPER_SCRIPT?=/usr/bin/make_helper
# quiet or not?
TEMPLAR_Q?=@
# folder where templar files are
TEMPLAR_TEMPLAR_FOLDER:=templartmpl
# do we want security?
TEMPLAR_SEC?=1
# do we want chmodding of output files?
TEMPLAR_CHMOD?=1
# do we use tdefs in the makefile?
TEMPLAR_NEED_TDEFS_INCLUDE?=0
# what folder to export to gh-pages?
TEMPLAR_GHPAGES_FOLDER?=out/web
# what branch to export to?
TEMPLAR_GHPAGES_BRANCH?=gh-pages

########
# code #
########
DONT_INCLUDE_TARGETS:=clean
ifneq ($(filter $(DONT_INCLUDE_TARGETS),$(MAKECMDGOALS)),)
DO_INCLUDE:=0
else
DO_INCLUDE:=$(TEMPLAR_NEED_TDEFS_INCLUDE)
endif

TEMPLAR_TMPL_EXTRA_DEPS:=$(shell $(TEMPLAR_TEMPLAR_SCRIPT) get_deps)
# the - (minus) at the begining of the next line is so that users wont see
# an error coming out of make when the file needs to be rebuilt...
ifeq ($(DO_INCLUDE),1)
-include $(TEMPLAR_TMPL_FILE)
endif # DO_INCLUDE

TEMPLAR_TEMPLAR_SCRIPT_ARGS_PRINT:=
ifeq ($(TEMPLAR_SEC), 0)
TEMPLAR_TEMPLAR_SCRIPT_ARGS_PRINT+=--nosec
endif

TEMPLAR_TEMPLAR_SCRIPT_ARGS_PROCESS:=
ifeq ($(TEMPLAR_CHMOD), 0)
TEMPLAR_TEMPLAR_SCRIPT_ARGS_PROCESS+=--nochmod
endif

# templar sources and targets
TEMPLAR_ALL_MAKO_SRC:=$(shell find $(TEMPLAR_TEMPLAR_FOLDER) \( -type f -or -type l \) -and -name "*.mako" 2> /dev/null)
TEMPLAR_ALL_MAKO_TGT:=$(shell $(TEMPLAR_MAKEHELPER_SCRIPT) remove-folders $(TEMPLAR_ALL_MAKO_SRC))
TEMPLAR_ALL_COPY_SRC:=$(shell find $(TEMPLAR_TEMPLAR_FOLDER) \( -type f -or -type l \) -and -not -name "*.mako" 2> /dev/null)
TEMPLAR_ALL_COPY_TGT:=$(shell $(TEMPLAR_MAKEHELPER_SCRIPT) remove-folder $(TEMPLAR_ALL_COPY_SRC))

# MAKEFILE_LIST includes included makefiles like TEMPLAR_TMPL_FILE above...
TEMPLAR_ALL_DEP:=$(MAKEFILE_LIST) $(TEMPLAR_TMPL_EXTRA_DEPS)
#TEMPLAR_ALL_DEP:=$(TEMPLAR_TMPL_FILE) $(TEMPLAR_MAKEFILE)
TEMPLAR_ALL:=$(TEMPLAR_ALL_MAKO_TGT) $(TEMPLAR_ALL_COPY_TGT)

###########
# targets #
###########
.PHONY: templar_debug
templar_debug:
	$(info doing [$@])
	$(info TEMPLAR_MAKEFILE is $(TEMPLAR_MAKEFILE))
	$(info TEMPLAR_TMPL_FILE is $(TEMPLAR_TMPL_FILE))
	$(info TEMPLAR_TMPL_EXTRA_DEPS is $(TEMPLAR_TMPL_EXTRA_DEPS))
	$(info TEMPLAR_ALL_MAKO_SRC is $(TEMPLAR_ALL_MAKO_SRC))
	$(info TEMPLAR_ALL_MAKO_TGT is $(TEMPLAR_ALL_MAKO_TGT))
	$(info TEMPLAR_ALL is $(TEMPLAR_ALL))
	$(info TEMPLAR_ALL_DEP is $(TEMPLAR_ALL_DEP))
	$(info TEMPLAR_TEMPLAR_SCRIPT is $(TEMPLAR_TEMPLAR_SCRIPT))
	$(info TEMPLAR_MAKEHELPER_SCRIPT is $(TEMPLAR_MAKEHELPER_SCRIPT))
	$(info TEMPLAR_SEC is $(TEMPLAR_SEC))

# rule about creating the template file
# it should not depend on TEMPLAR_ALL_DEP since TEMPLAR_ALL_DEP includes it and this will create circular dependency
$(TEMPLAR_TMPL_FILE): $(TEMPLAR_TEMPLAR_SCRIPT) $(TEMPLAR_TMPL_EXTRA_DEPS)
	$(info doing [$@])
	$(TEMPLAR_Q)$(TEMPLAR_TEMPLAR_SCRIPT) printmake $(TEMPLAR_TEMPLAR_SCRIPT_ARGS_PRINT) > $@

.PHONY: templar
templar: $(TEMPLAR_ALL_MAKO_TGT)

.PHONY: gh-pages
gh-pages: $(ALL) $(ALL_DEPS)
	$(info doing [$@])
	$(TEMPLAR_Q)node_modules/gh-pages/bin/gh-pages --dist $(TEMPLAR_GHPAGES_FOLDER) --branch $(TEMPLAR_GHPAGES_BRANCH) 2> /dev/null

#########
# rules #
#########
$(TEMPLAR_ALL_MAKO_TGT): %: $(TEMPLAR_TEMPLAR_FOLDER)/%.mako $(TEMPLAR_ALL_DEP)
	$(info doing [$@])
	$(TEMPLAR_Q)$(TEMPLAR_TEMPLAR_SCRIPT) process $(TEMPLAR_TEMPLAR_SCRIPT_ARGS_PROCESS) --input $< --output $@
$(TEMPLAR_ALL_COPY_TGT): %: $(TEMPLAR_TEMPLAR_FOLDER)/% $(TEMPLAR_ALL_DEP)
	$(info doing [$@])
	$(TEMPLAR_Q)mkdir -p $(dir $@)
	$(TEMPLAR_Q)cp $< $@

###########
# globals #
###########
ifneq (clean, $(MAKECMDGOALS))
ALL:=$(TEMPLAR_ALL)
else
ALL:=
endif
ALL_DEP:=$(TEMPLAR_ALL_DEP)
